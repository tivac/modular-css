// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/plugins /composition.js should allow multiple composes declarations 1`] = `
Array [
  Object {
    "classes": Object {
      "booga": Array [
        "booga",
      ],
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "booga": Array [
        "booga",
      ],
      "tooga": Array [
        "wooga",
        "booga",
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should compose multiple classes from imports 1`] = `
Array [
  Object {
    "classes": Object {
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "wooga": Array [
        "googa",
        "tooga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should expose imported heirachy details in the messages 1`] = `
Array [
  Object {
    "classes": Object {
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "wooga": Array [
        "googa",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should find scoped identifiers from the scoping plugin's message 1`] = `
Array [
  Object {
    "classes": Object {
      "googa": Array [
        "googa",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "googa": Array [
        "wooga",
        "googa",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should handle multi-level dependencies 1`] = `
Array [
  Object {
    "classes": Object {
      "booga": Array [
        "booga",
      ],
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "booga": Array [
        "wooga",
        "booga",
      ],
      "tooga": Array [
        "wooga",
        "booga",
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should output composition results as a message 1`] = `
Array [
  Object {
    "classes": Object {
      "fooga": Array [
        "fooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "fooga": Array [
        "wooga",
        "fooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should output removed classes as part of a message 1`] = `
Array [
  Object {
    "classes": Object {
      "fooga": Array [
        "fooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "fooga": Array [
        "wooga",
        "fooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should output the class hierarchy in a message 1`] = `
Array [
  Object {
    "classes": Object {
      "booga": Array [
        "booga",
      ],
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "booga": Array [
        "booga",
      ],
      "tooga": Array [
        "booga",
        "wooga",
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should remove classes that only contain a composes rule from the output CSS 1`] = `".wooga { color: red; }"`;

exports[`/plugins /composition.js should support IDs instead of classes 1`] = `
Array [
  Object {
    "classes": Object {
      "fooga": Array [
        "fooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "fooga": Array [
        "wooga",
        "fooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against global identifiers 1`] = `
Array [
  Object {
    "classes": Object {
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "wooga": Array [
        "booga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against global identifiers 2`] = `
Array [
  Object {
    "classes": Object {
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "wooga": Array [
        "booga",
        "tooga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against global identifiers 3`] = `
Array [
  Object {
    "classes": Object {
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "wooga": Array [
        "booga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against global identifiers 4`] = `
Array [
  Object {
    "classes": Object {
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "booga",
        "tooga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against global identifiers 5`] = `
Array [
  Object {
    "classes": Object {
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "booga",
        "tooga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against global identifiers 6`] = `
Array [
  Object {
    "classes": Object {
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "booga",
        "tooga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against global identifiers 7`] = `
Array [
  Object {
    "classes": Object {
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "tooga": Array [
        "tooga",
      ],
      "wooga": Array [
        "booga",
        "tooga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against global identifiers w/ the same name 1`] = `
Array [
  Object {
    "classes": Object {
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

exports[`/plugins /composition.js should support composing against later classes 1`] = `
Array [
  Object {
    "classes": Object {
      "booga": Array [
        "booga",
      ],
      "wooga": Array [
        "wooga",
      ],
    },
    "plugin": "modular-css-scoping",
    "type": "modular-css",
  },
  Object {
    "classes": Object {
      "booga": Array [
        "booga",
      ],
      "wooga": Array [
        "booga",
        "wooga",
      ],
    },
    "plugin": "modular-css-composition",
    "type": "modular-css",
  },
]
`;

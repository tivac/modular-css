@value textColor: hsl(0, 0%, 94%);
@value borderColor: #EEEEEE;
@value opacityTime: 125ms;

html {
    box-sizing: border-box;
    
    font-family: 'Roboto', sans-serif;
    
    width: 100%;
    height: 100%;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

body {
    width: 100%;
    height: 100%;

    display: flex;
    flex-flow: column nowrap;
}

pre,
textarea,
:global(.CodeMirror) {
    font-family: 'Inconsolata', monospace;
}

a {
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

.button {
    background-color: rgba(0,0,0,0);
    border-color: rgb(0, 0, 238);
    border-style: none;
    box-sizing: content-box;
    color: rgb(0, 0, 238);
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    font: inherit;
    height: auto;
    padding: 0;
    perspective-origin: 0 0;
    text-align: start;
    text-decoration: none;
    transform-origin: 0 0;
    width: auto;
    -moz-appearance: none;
    -webkit-logical-height: 1em;
    -webkit-logical-width: auto;
}
  
@supports (-moz-appearance:none) {
    .button::-moz-focus-inner {
        border: none;
        padding: 0;
    }
  
    .button:focus {
        outline-style: dotted;
        outline-width: 1px;
    }
}

.repl {
    width: 100%;
    height: 100%;

    display: grid;

    grid: "input output";
}

.column {
    display: flex;
    flex-direction: column;
    align-items: stretch;

    position: relative;

    border-top: 2px solid borderColor;
}

.column + .column {
    border-left: 2px solid borderColor;
}

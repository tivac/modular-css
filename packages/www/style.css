@value buttonCss: "./button.css";

@value * as colors from "./colors.css";

html {
    box-sizing: border-box;
    font-family: 'Open Sans', sans-serif;
}

*, *:before, *:after {
    box-sizing: inherit;
}

body {
    background: colors.mainbg;
    color: colors.main;
}

.hd {
    margin-top: 0;
    padding: 20px 10px;
    
    background: colors.mutedbg;
    color: colors.muted;

    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: baseline;

    border-bottom: 2px solid colors.accent;
}

.title {
    margin: 0 10px 0;
}

.title a,
.title a:active,
.title a:visited {
    color: inherit;
    text-decoration: none;
}

.title a:hover {
    text-decoration: underline;
}

.subhead {
    font-size: 60%;
}

.content {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;

    justify-content: space-between;
    align-items: flex-start;
}

.column {
    flex: 1;
    display: flex;
    flex-direction: column;

    margin: 10px;
}

.files,
.output {
    composes: column;

    position: relative;
}

.actions {
    display: flex;
    justify-content: space-between;
}

.btn {
    flex: 1;

    margin-bottom: 10px;
}

.btn + .btn {
    margin-left: 10px;
}

.add {
    composes: button from buttonCss;
    composes: btn;

    background: colors.good;

    font-weight: bold;
}

.export {
    composes: button from buttonCss;
    composes: btn;

    /* used for clipboard.js targeting */
    composes: global(clipboard);

    background: colors.mutedbg;
    color: colors.muted;
}

.panel :global(.CodeMirror) {
    min-height: 500px;
}

:global(.CodeMirror) {
    border: 1px solid #666;
}

/* Since modular-css uses some non-standard things */
:global(.CodeMirror .cm-property.cm-error) {
    background: transparent;
}

:global(.cm-s-monokai.CodeMirror) {
    background: #242424;
}

.exports {
    display: none;
}

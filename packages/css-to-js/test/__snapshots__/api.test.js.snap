// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@modular-css/css-to-js API should dedupe repeated identifiers 1`] = `
import { a } from "<ROOT-DIR>/a.css";
const a1 = a + " " + "mc71966a67_a"
export default {
    "a" : a1
};

export {
    a1 as a
};
`;

exports[`@modular-css/css-to-js API should generate a javscript proxy in dev 1`] = `
const a = "mc74f3fa7b_a"
const data = {
    a
};

export default new Proxy(data, {
    get(tgt, key) {
        if(key in tgt) {
            return tgt[key];
        }

        throw new ReferenceError(
            key + " is not exported by " + "a.css"
        );
    }
})

export {
    a
};
`;

exports[`@modular-css/css-to-js API should generate javascript 1`] = `
const a = "mc74f3fa7b_a"
export default {
    a
};

export {
    a
};
`;

exports[`@modular-css/css-to-js API should output css when requested 1`] = `
const a = "mc74f3fa7b_a"
export default {
    a
};

export {
    a
};
export const styles = ".mc74f3fa7b_a { color: red; }";
`;

exports[`@modular-css/css-to-js API should represent external @values 1`] = `
import { $values as $aValues } from "<ROOT-DIR>/a.css";
const $values = {
    "v" : $aValues["v"],
};
const b = "mc71966a67_b"
export default {
    $values,
b
};

export {
    $values,
b
};
`;

exports[`@modular-css/css-to-js API should represent external composition 1`] = `
import { a } from "<ROOT-DIR>/a.css";
const b = a + " " + "mc71966a67_b"
export default {
    b
};

export {
    b
};
`;

exports[`@modular-css/css-to-js API should represent local @values 1`] = `
const v = "#00F"
const $values = {
    v,
};
const a = "mc74f3fa7b_a"
export default {
    $values,
a
};

export {
    $values,
a
};
`;

exports[`@modular-css/css-to-js API should represent local composition 1`] = `
const a = "mc74f3fa7b_a"
const b = a + " " + "mc74f3fa7b_b"
export default {
    a,
b
};

export {
    a,
b
};
`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { rewriteInvalid: false } 1`] = `
const a1 = "mc74f3fa7b_a-1"
export default {
    "a-1" : a1
};
`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { rewriteInvalid: false }: named exports 1`] = `Array []`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { rewriteInvalid: false }: warnings 1`] = `
Array [
  "a-1" is not a valid JS identifier,
]
`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { rewriteInvalid: false, warn: false } 1`] = `
const a1 = "mc74f3fa7b_a-1"
export default {
    "a-1" : a1
};
`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { rewriteInvalid: false, warn: false }: named exports 1`] = `Array []`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { rewriteInvalid: false, warn: false }: warnings 1`] = `Array []`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { warn: false } 1`] = `
const a1 = "mc74f3fa7b_a-1"
export default {
    "a-1" : a1
};

export {
    a1
};
`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { warn: false }: named exports 1`] = `
Array [
  a1,
]
`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn { warn: false }: warnings 1`] = `Array []`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn {} 1`] = `
const a1 = "mc74f3fa7b_a-1"
export default {
    "a-1" : a1
};

export {
    a1
};
`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn {}: named exports 1`] = `
Array [
  a1,
]
`;

exports[`@modular-css/css-to-js API should rewrite invalid identifiers & warn {}: warnings 1`] = `
Array [
  "a-1" is not a valid JS identifier, exported as "a1",
]
`;

exports[`@modular-css/css-to-js API should use relative imports when requested 1`] = `
import { a } from "./a.css";
const b = a + " " + "mc71966a67_b"
export default {
    b
};

export {
    b
};
`;

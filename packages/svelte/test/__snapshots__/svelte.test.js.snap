// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/svelte.js should extract CSS from a <link> tag ("existing script") 1`] = `
"

<div class=\\"flex wrapper\\">
    <h1 class=\\"flex fooga hd\\">Head</h1>
    <div class=\\"fooga wooga bd\\">
        <p class=\\"{bool ? \\"text\\" : \\"active\\" }\\">Text</p>
    </div>
</div>

<script>import css from \\"./external.css\\";
            
export default {
data : () => ({
    bool : true
}),

oncreate() {
    const bd = {
        flex : \\"flex\\"
    };

    const style = css[bd.flex];
}
};</script>
"
`;

exports[`/svelte.js should extract CSS from a <link> tag ("existing script") 2`] = `
"/* packages/svelte/test/specimens/simple.css */
.fooga {
    color: red;
}
/* packages/svelte/test/specimens/dependencies.css */
.wooga {

    background: blue;
}
/* packages/svelte/test/specimens/external.css */
.flex {
    display: flex;
}
.text {
    color: #000;
}
.active {
    color: #F00;
}
"
`;

exports[`/svelte.js should extract CSS from a <link> tag ("no script") 1`] = `
"

<div class=\\"flex wrapper\\">
    <h1 class=\\"flex fooga hd\\">Head</h1>
    <div class=\\"fooga wooga bd\\">
        <p class=\\"{bool ? \\"text\\" : \\"active\\" }\\">Text</p>
    </div>
</div>
<script>
    import css from \\"./external.css\\";
</script>"
`;

exports[`/svelte.js should extract CSS from a <link> tag ("no script") 2`] = `
"/* packages/svelte/test/specimens/simple.css */
.fooga {
    color: red;
}
/* packages/svelte/test/specimens/dependencies.css */
.wooga {

    background: blue;
}
/* packages/svelte/test/specimens/external.css */
.flex {
    display: flex;
}
.text {
    color: #000;
}
.active {
    color: #F00;
}
"
`;

exports[`/svelte.js should extract CSS from a <link> tag ("single quotes") 1`] = `
"

<div class=\\"flex wrapper\\">
    <h1 class=\\"flex fooga hd\\">Head</h1>
    <div class=\\"fooga wooga bd\\">
        <p class=\\"{bool ? \\"text\\" : \\"active\\" }\\">Text</p>
    </div>
</div>
<script>
    import css from \\"./external.css\\";
</script>"
`;

exports[`/svelte.js should extract CSS from a <link> tag ("single quotes") 2`] = `
"/* packages/svelte/test/specimens/simple.css */
.fooga {
    color: red;
}
/* packages/svelte/test/specimens/dependencies.css */
.wooga {

    background: blue;
}
/* packages/svelte/test/specimens/external.css */
.flex {
    display: flex;
}
.text {
    color: #000;
}
.active {
    color: #F00;
}
"
`;

exports[`/svelte.js should extract CSS from a <link> tag ("unquoted") 1`] = `
"

<div class=\\"flex wrapper\\">
    <h1 class=\\"flex fooga hd\\">Head</h1>
    <div class=\\"fooga wooga bd\\">
        <p class=\\"{bool ? \\"text\\" : \\"active\\" }\\">Text</p>
    </div>
</div>
<script>
    import css from \\"./external.css\\";
</script>"
`;

exports[`/svelte.js should extract CSS from a <link> tag ("unquoted") 2`] = `
"/* packages/svelte/test/specimens/simple.css */
.fooga {
    color: red;
}
/* packages/svelte/test/specimens/dependencies.css */
.wooga {

    background: blue;
}
/* packages/svelte/test/specimens/external.css */
.flex {
    display: flex;
}
.text {
    color: #000;
}
.active {
    color: #F00;
}
"
`;

exports[`/svelte.js should extract CSS from a <style> tag 1`] = `
"<div class=\\"flex wrapper\\">
    <h1 class=\\"flex fooga hd\\">Head</h1>
    <div class=\\"fooga wooga bd\\">
        <p class=\\"{bool ? \\"text\\" : \\"active\\" }\\">Text</p>
    </div>
</div>

<style>/* replaced by modular-css */</style>

<script>
export default {
    data : () => ({
        bool : true
    })
};
</script>
"
`;

exports[`/svelte.js should extract CSS from a <style> tag 2`] = `
"/* packages/svelte/test/specimens/simple.css */
.fooga {
    color: red;
}
/* packages/svelte/test/specimens/dependencies.css */
.wooga {

    background: blue;
}
/* packages/svelte/test/specimens/style.html */
.flex {
        display: flex;
    }
.text {
        color: #000;
    }
.active {
        color: #F00;
    }
"
`;

exports[`/svelte.js should handle invalid references in "<script>" (inline: false, strict: false) 1`] = `
Array [
  Array [
    "modular-css-svelte: Unable to find \\"css.nuhuh\\" in ./invalid.css",
  ],
]
`;

exports[`/svelte.js should handle invalid references in "<script>" (inline: false, strict: false) 2`] = `
"

<h2 class=\\"yup\\">Yup</h2>

<script>import css from \\"./invalid.css\\";
            
console.log(css.nuhuh);</script>
"
`;

exports[`/svelte.js should handle invalid references in "<script>" (inline: false, strict: true) 1`] = `"modular-css-svelte: Unable to find \\"css.nuhuh\\" in ./invalid.css"`;

exports[`/svelte.js should handle invalid references in "<script>" (inline: true, strict: false) 1`] = `
Array [
  Array [
    "modular-css-svelte: Unable to find \\"css.nuhuh\\" in <style>",
  ],
]
`;

exports[`/svelte.js should handle invalid references in "<script>" (inline: true, strict: false) 2`] = `
"<h2 class=\\"yup\\">Yup</h2>

<style>/* replaced by modular-css */</style>

<script>
    console.log(css.nuhuh);
</script>
"
`;

exports[`/svelte.js should handle invalid references in "<script>" (inline: true, strict: true) 1`] = `"modular-css-svelte: Unable to find \\"css.nuhuh\\" in <style>"`;

exports[`/svelte.js should handle invalid references in "template" (inline: false, strict: false) 1`] = `
Array [
  Array [
    "modular-css-svelte: Unable to find \\"css.nope\\" in ./invalid.css",
  ],
]
`;

exports[`/svelte.js should handle invalid references in "template" (inline: false, strict: false) 2`] = `
"

<h1 class=\\"{css.nope}\\">Nope</h1>
<h2 class=\\"yup\\">Yup</h2>
<script>
    import css from \\"./invalid.css\\";
</script>"
`;

exports[`/svelte.js should handle invalid references in "template" (inline: false, strict: true) 1`] = `"modular-css-svelte: Unable to find \\"css.nope\\" in ./invalid.css"`;

exports[`/svelte.js should handle invalid references in "template" (inline: true, strict: false) 1`] = `
Array [
  Array [
    "modular-css-svelte: Unable to find \\"css.nope\\" in <style>",
  ],
]
`;

exports[`/svelte.js should handle invalid references in "template" (inline: true, strict: false) 2`] = `
"<h1 class=\\"{css.nope}\\">Nope</h1>
<h2 class=\\"yup\\">Yup</h2>

<style>/* replaced by modular-css */</style>
"
`;

exports[`/svelte.js should handle invalid references in "template" (inline: true, strict: true) 1`] = `"modular-css-svelte: Unable to find \\"css.nope\\" in <style>"`;

exports[`/svelte.js should ignore files without <style> blocks 1`] = `
"<h1>Hello</h1>
<script>console.log(\\"output\\")</script>"
`;

exports[`/svelte.js should ignore files without <style> blocks 2`] = `""`;

exports[`/svelte.js should throw on both <style> and <link> in one file 1`] = `"modular-css-svelte: use <style> OR <link>, but not both"`;

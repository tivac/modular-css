{
	"scopeName": "source.mcss-extras",
	"injectionSelector": "L:source.css",
	"patterns": [
		{
			"include": "#at-value"
		},
		{
			"include": "#composes-keywords"
		}
	],
	"repository": {
		"at-value": {
			"patterns": [
				{
					"comment": "@value",
					"begin": "(?i)((@)value)(?:[^;])",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.at-rule.value.css"
						},
						"2": {
							"name": "punctuation.definition.keyword.css"
						}
					},
					"end": "\\s*(;)",
					"endCaptures": {
						"1": {
							"name": "punctuation.terminator.rule.css"
						}
					},
					"name": "meta.at-rule.value.css",
					"patterns": [
						{
							"comment": "@value name: value;",
							"match": "([^;]+):([^;]+)",
							"captures": {
								"1": {
									"name": "support.type.property-name.css"
								},
								"2": {
									"name": "support.type.property-value.css"
								}
							}
						},
						{
							"comment": "@value name from './value';",
							"match": "(\\w+) (from) ([^;]+)",
							"captures": {
								"1": {
									"name": "support.type.property-name.css"
								},
								"2": {
									"name": "punctuation.terminator.rule.css"
								},
								"3": {
									"patterns" : [
										{ "include" : "#string" }
									]
								}
							}
						}
					]
				}
			]
		},
		"composes-keywords": {
			"patterns": [
				{
					"match": "(?xi) (?<![\\w-])\n(?:\n  # Standard CSS\n  composes\n)\n(?![\\w-])",
					"name": "support.type.property-name.css"
				}
			]
		},
		"string": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.css"
						}
					},
					"end": "\"|(?<!\\\\)(?=$|\\n)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.css"
						}
					},
					"name": "string.quoted.double.css",
					"patterns": [
						{
							"begin": "(?:\\G|^)(?=(?:[^\\\\\"]|\\\\.)+$)",
							"end": "$",
							"name": "invalid.illegal.unclosed.string.css",
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						},
						{
							"include": "#escapes"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.css"
						}
					},
					"end": "'|(?<!\\\\)(?=$|\\n)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.css"
						}
					},
					"name": "string.quoted.single.css",
					"patterns": [
						{
							"begin": "(?:\\G|^)(?=(?:[^\\\\']|\\\\.)+$)",
							"end": "$",
							"name": "invalid.illegal.unclosed.string.css",
							"patterns": [
								{
									"include": "#escapes"
								}
							]
						},
						{
							"include": "#escapes"
						}
					]
				}
			]
		},
		"escapes": {
			"patterns": [
				{
					"match": "\\\\[0-9a-fA-F]{1,6}",
					"name": "constant.character.escape.codepoint.css"
				},
				{
					"begin": "\\\\$\\s*",
					"end": "^(?<!\\G)",
					"name": "constant.character.escape.newline.css"
				},
				{
					"match": "\\\\.",
					"name": "constant.character.escape.css"
				}
			]
		},
		"comment-block": {
			"begin": "/\\*",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.begin.css"
				}
			},
			"end": "\\*/",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.end.css"
				}
			},
			"name": "comment.block.css"
		}
	}
}
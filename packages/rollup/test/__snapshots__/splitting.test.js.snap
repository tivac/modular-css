// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/rollup.js code splitting should dedupe chunk names using rollup's incrementing counter logic (hashed) 1`] = `
Array [
  Object {
    "file": "a-14363c2f.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/a.css */
.a {

    color: aqua;
}

/*# sourceMappingURL=a-14363c2f.css.map */",
  },
  Object {
    "file": "a-14363c2f.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/a.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,yDAAA;AAAA;;IAGI,WAAW;AACf\\",\\"file\\":\\"a-[hash].css\\",\\"sourcesContent\\":[\\".a {\\\\n    composes: shared from \\\\\\"./shared.css\\\\\\";\\\\n\\\\n    color: aqua;\\\\n}\\\\n\\"]}",
  },
  Object {
    "file": "b-b31885ac.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/b.css */
.b {

    color: blue;
}

/*# sourceMappingURL=b-b31885ac.css.map */",
  },
  Object {
    "file": "b-b31885ac.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/b.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,yDAAA;AAAA;;IAGI,WAAW;AACf\\",\\"file\\":\\"b-[hash].css\\",\\"sourcesContent\\":[\\".b {\\\\n    composes: shared from \\\\\\"./shared.css\\\\\\";\\\\n\\\\n    color: blue;\\\\n}\\\\n\\"]}",
  },
  Object {
    "file": "chunk-23649ca7.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/d.css */
.d {

    color: deepskyblue;
}

/*# sourceMappingURL=chunk-23649ca7.css.map */",
  },
  Object {
    "file": "chunk-23649ca7.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/packages/rollup/test/specimens/multiple-chunks/b.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,yDAAA;AAAA;;IAGI,kBAAW;AACf\\",\\"file\\":\\"chunk-[hash].css\\",\\"sourcesContent\\":[\\".b {\\\\n    composes: shared from \\\\\\"./shared.css\\\\\\";\\\\n\\\\n    color: blue;\\\\n}\\\\n\\"]}",
  },
  Object {
    "file": "chunk-2f7464a0.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/constants.css */ /* packages/rollup/test/specimens/multiple-chunks/shared.css */
.shared { color: salmon; }

.other { color: blue; }

/*# sourceMappingURL=chunk-2f7464a0.css.map */",
  },
  Object {
    "file": "chunk-2f7464a0.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/constants.css\\",\\"../../../specimens/multiple-chunks/shared.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,iEAAA,ECAA,8DAAA;AAEA,UAAU,aAAa,EAAE;;AAEzB,SDJA,WAAiB,ECIK\\",\\"file\\":\\"chunk-[hash].css\\",\\"sourcesContent\\":[\\"@value main: blue;\\\\n\\",\\"@value main from \\\\\\"./constants.css\\\\\\";\\\\n\\\\n.shared { color: salmon; }\\\\n\\\\n.other { color: main; }\\\\n\\"]}",
  },
  Object {
    "file": "chunk-57d5c038.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/c.css */
.c {

    color: coral;
}

/*# sourceMappingURL=chunk-57d5c038.css.map */",
  },
  Object {
    "file": "chunk-57d5c038.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/packages/rollup/test/specimens/multiple-chunks/b.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,yDAAA;AAAA;;IAGI,YAAW;AACf\\",\\"file\\":\\"chunk-[hash].css\\",\\"sourcesContent\\":[\\".b {\\\\n    composes: shared from \\\\\\"./shared.css\\\\\\";\\\\n\\\\n    color: blue;\\\\n}\\\\n\\"]}",
  },
]
`;

exports[`/rollup.js code splitting should dedupe chunk names using rollup's incrementing counter logic 1`] = `
Array [
  Object {
    "file": "a.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/a.css */
.a {

    color: aqua;
}

/*# sourceMappingURL=a.css.map */",
  },
  Object {
    "file": "a.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/a.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,yDAAA;AAAA;;IAGI,WAAW;AACf\\",\\"file\\":\\"a.css\\",\\"sourcesContent\\":[\\".a {\\\\n    composes: shared from \\\\\\"./shared.css\\\\\\";\\\\n\\\\n    color: aqua;\\\\n}\\\\n\\"]}",
  },
  Object {
    "file": "b.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/b.css */
.b {

    color: blue;
}

/*# sourceMappingURL=b.css.map */",
  },
  Object {
    "file": "b.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/b.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,yDAAA;AAAA;;IAGI,WAAW;AACf\\",\\"file\\":\\"b.css\\",\\"sourcesContent\\":[\\".b {\\\\n    composes: shared from \\\\\\"./shared.css\\\\\\";\\\\n\\\\n    color: blue;\\\\n}\\\\n\\"]}",
  },
  Object {
    "file": "chunk.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/constants.css */ /* packages/rollup/test/specimens/multiple-chunks/shared.css */
.shared { color: salmon; }

.other { color: blue; }

/*# sourceMappingURL=chunk.css.map */",
  },
  Object {
    "file": "chunk.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/constants.css\\",\\"../../../specimens/multiple-chunks/shared.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,iEAAA,ECAA,8DAAA;AAEA,UAAU,aAAa,EAAE;;AAEzB,SDJA,WAAiB,ECIK\\",\\"file\\":\\"chunk.css\\",\\"sourcesContent\\":[\\"@value main: blue;\\\\n\\",\\"@value main from \\\\\\"./constants.css\\\\\\";\\\\n\\\\n.shared { color: salmon; }\\\\n\\\\n.other { color: main; }\\\\n\\"]}",
  },
  Object {
    "file": "chunk2.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/d.css */
.d {

    color: deepskyblue;
}
",
  },
  Object {
    "file": "chunk2.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/packages/rollup/test/specimens/multiple-chunks/b.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,yDAAA;AAAA;;IAGI,kBAAW;AACf\\",\\"file\\":\\"chunk.css\\",\\"sourcesContent\\":[\\".b {\\\\n    composes: shared from \\\\\\"./shared.css\\\\\\";\\\\n\\\\n    color: blue;\\\\n}\\\\n\\"]}",
  },
  Object {
    "file": "chunk3.css",
    "text": "/* packages/rollup/test/specimens/multiple-chunks/c.css */
.c {

    color: coral;
}
",
  },
  Object {
    "file": "chunk3.css.map",
    "text": "{\\"version\\":3,\\"sources\\":[\\"../../../specimens/multiple-chunks/packages/rollup/test/specimens/multiple-chunks/b.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,yDAAA;AAAA;;IAGI,YAAW;AACf\\",\\"file\\":\\"chunk.css\\",\\"sourcesContent\\":[\\".b {\\\\n    composes: shared from \\\\\\"./shared.css\\\\\\";\\\\n\\\\n    color: blue;\\\\n}\\\\n\\"]}",
  },
]
`;

exports[`/rollup.js code splitting should ouput only 1 JSON file 1`] = `
Array [
  Object {
    "file": "chunk.css",
    "text": "/* packages/rollup/test/specimens/simple.css */
.fooga {
    color: red;
}
",
  },
  Object {
    "file": "dependencies.css",
    "text": "/* packages/rollup/test/specimens/dependencies.css */
.wooga {

    background: blue;
}
",
  },
  Object {
    "file": "exports.json",
    "text": "{
    \\"packages/rollup/test/specimens/dependencies.css\\": {
        \\"wooga\\": \\"fooga wooga\\"
    },
    \\"packages/rollup/test/specimens/simple.css\\": {
        \\"str\\": \\"\\\\\\"string\\\\\\"\\",
        \\"fooga\\": \\"fooga\\"
    }
}",
  },
]
`;

exports[`/rollup.js code splitting should output metadata successfully when unreferenced CSS is output to common 1`] = `
Array [
  Object {
    "file": "a.css",
    "text": "/* packages/rollup/test/specimens/metadata/a.css */
.mc541d3f5c_a { color: aqua; }
",
  },
  Object {
    "file": "b.css",
    "text": "/* packages/rollup/test/specimens/metadata/b.css */
.mc04101138_b { color: blue; }
",
  },
  Object {
    "file": "chunk.css",
    "text": "/* packages/rollup/test/specimens/metadata/d.css */
.mc7de0d66b_d { color: darkkhaki; }
",
  },
  Object {
    "file": "common.css",
    "text": "/* fake.css */
.mc2c838439_fake { color: red; }",
  },
  Object {
    "file": "metadata.json",
    "text": "{
    \\"chunk2.js\\": {
        \\"assets\\": [],
        \\"dynamicAssets\\": [
            \\"assets/chunk.css\\"
        ]
    },
    \\"a.js\\": {
        \\"assets\\": [
            \\"assets/a.css\\"
        ],
        \\"dynamicAssets\\": []
    },
    \\"b.js\\": {
        \\"assets\\": [
            \\"assets/b.css\\"
        ],
        \\"dynamicAssets\\": []
    }
}",
  },
]
`;

exports[`/rollup.js code splitting should support circular JS dependencies 1`] = `
Array [
  Object {
    "file": "a.js",
    "text": "import b from './b.js';

var css = {
    \\"a\\": \\"a\\"
};

console.log(css, b);

var a$1 = \\"a\\";

export default a$1;
",
  },
  Object {
    "file": "assets/common.css",
    "text": "/* packages/rollup/test/specimens/circular-dependencies/a.css */
.a { color: aqua; }
/* packages/rollup/test/specimens/circular-dependencies/b.css */
.b { color: blue; }
",
  },
  Object {
    "file": "b.js",
    "text": "import a from './a.js';

var css = {
    \\"b\\": \\"b\\"
};

console.log(css, a);

var b$1 = \\"b\\";

export default b$1;
",
  },
]
`;

exports[`/rollup.js code splitting should support dynamic imports 1`] = `
Array [
  Object {
    "file": "a.css",
    "text": "/* packages/rollup/test/specimens/dynamic-imports/f.css */
.f {
    color: floralwhite;
}
/* packages/rollup/test/specimens/dynamic-imports/d.css */
.d {
    
    color: darkred;
}
/* packages/rollup/test/specimens/dynamic-imports/a.css */
.a {

    color: aqua;
}
",
  },
  Object {
    "file": "b.css",
    "text": "/* packages/rollup/test/specimens/dynamic-imports/e.css */
.e {
    color: #EEE;
}
/* packages/rollup/test/specimens/dynamic-imports/b.css */
.b {
    
    color: blue;
}
",
  },
  Object {
    "file": "chunk.css",
    "text": "/* packages/rollup/test/specimens/dynamic-imports/c.css */
.c {
    
    color: cyan;
}
",
  },
]
`;

exports[`/rollup.js code splitting should support manual chunks 1`] = `
Array [
  Object {
    "file": "a.css",
    "text": "/* packages/rollup/test/specimens/manual-chunks/a.css */
.a {

    color: red;
}
",
  },
  Object {
    "file": "b.css",
    "text": "/* packages/rollup/test/specimens/manual-chunks/b.css */
.b {

    color: blue;
}
",
  },
  Object {
    "file": "shared.css",
    "text": "/* packages/rollup/test/specimens/manual-chunks/d.css */
/* packages/rollup/test/specimens/manual-chunks/c.css */
.c {
    color: green;
    background: darkred;
}
",
  },
]
`;

exports[`/rollup.js code splitting should support outputting metadata about CSS dependencies 1`] = `
Array [
  Object {
    "file": "a.css",
    "text": "/* packages/rollup/test/specimens/metadata/a.css */
.a { color: aqua; }
",
  },
  Object {
    "file": "b.css",
    "text": "/* packages/rollup/test/specimens/metadata/b.css */
.b { color: blue; }
",
  },
  Object {
    "file": "chunk.css",
    "text": "/* packages/rollup/test/specimens/metadata/d.css */
.d { color: darkkhaki; }
",
  },
  Object {
    "file": "metadata.json",
    "text": "{
    \\"chunk2.js\\": {
        \\"assets\\": [],
        \\"dynamicAssets\\": [
            \\"assets/chunk.css\\"
        ]
    },
    \\"a.js\\": {
        \\"assets\\": [
            \\"assets/a.css\\"
        ],
        \\"dynamicAssets\\": []
    },
    \\"b.js\\": {
        \\"assets\\": [
            \\"assets/b.css\\"
        ],
        \\"dynamicAssets\\": []
    }
}",
  },
]
`;

exports[`/rollup.js code splitting should support outputting metadata about CSS dependencies to a named file  1`] = `
Array [
  Object {
    "file": "a.css",
    "text": "/* packages/rollup/test/specimens/metadata/a.css */
.a { color: aqua; }
",
  },
  Object {
    "file": "b.css",
    "text": "/* packages/rollup/test/specimens/metadata/b.css */
.b { color: blue; }
",
  },
  Object {
    "file": "chunk.css",
    "text": "/* packages/rollup/test/specimens/metadata/d.css */
.d { color: darkkhaki; }
",
  },
  Object {
    "file": "chunks.json",
    "text": "{
    \\"chunk2.js\\": {
        \\"assets\\": [],
        \\"dynamicAssets\\": [
            \\"assets/chunk.css\\"
        ]
    },
    \\"a.js\\": {
        \\"assets\\": [
            \\"assets/a.css\\"
        ],
        \\"dynamicAssets\\": []
    },
    \\"b.js\\": {
        \\"assets\\": [
            \\"assets/b.css\\"
        ],
        \\"dynamicAssets\\": []
    }
}",
  },
]
`;

exports[`/rollup.js code splitting should support splitting up CSS files 1`] = `
Array [
  Object {
    "file": "chunk.css",
    "text": "/* packages/rollup/test/specimens/simple.css */
.fooga {
    color: red;
}
",
  },
  Object {
    "file": "dependencies.css",
    "text": "/* packages/rollup/test/specimens/dependencies.css */
.wooga {

    background: blue;
}
",
  },
]
`;

exports[`/rollup.js code splitting should support splitting up CSS files w/ shared assets 1`] = `
Array [
  Object {
    "file": "a.css",
    "text": "/* packages/rollup/test/specimens/css-chunks/a.css */
.a {

    color: aqua;
}
",
  },
  Object {
    "file": "b.css",
    "text": "/* packages/rollup/test/specimens/css-chunks/b.css */
.b {
    
    color: blue;
}
",
  },
  Object {
    "file": "chunk.css",
    "text": "/* packages/rollup/test/specimens/css-chunks/shared.css */
.shared {
    color: snow;
}
/* packages/rollup/test/specimens/css-chunks/c.css */
.c {

    color: cyan;
}
",
  },
]
`;

exports[`/rollup.js code splitting shouldn't break when dynamic imports are tree-shaken away (rollup/rollup#2659) 1`] = `Array []`;

exports[`/rollup.js code splitting shouldn't put bundle-specific CSS in common.css 1`] = `
Array [
  Object {
    "file": "a.css",
    "text": "/* packages/rollup/test/specimens/common-splitting/shared.css */
.shared {
    color: snow;
}
/* packages/rollup/test/specimens/common-splitting/a.css */
.a {

    color: aqua;
}
/* packages/rollup/test/specimens/common-splitting/b.css */
.b {

    color: blue;
}
",
  },
  Object {
    "file": "c.css",
    "text": "/* packages/rollup/test/specimens/common-splitting/c.css */
.c {
    color: cyan;
}
",
  },
]
`;

exports[`/rollup.js code splitting shouldn't use entry hashes as part of the CSS file names 1`] = `
Array [
  Object {
    "file": "assets/simple-8d1bcf7b.css",
    "text": "/* packages/rollup/test/specimens/simple.css */
.fooga {
    color: red;
}
",
  },
  Object {
    "file": "simple.15bac60f.js",
    "text": "var css = {
    \\"str\\": \\"\\\\\\"string\\\\\\"\\",
    \\"fooga\\": \\"fooga\\"
};

console.log(css);
",
  },
]
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`/rollup.js watch mode should generate updated output 1`] = `
Snapshot Diff:
- First value
+ Second value

  Object {
    "assets/watched.css": "/* packages/rollup/test/output/watch/change/watched.css */
- .mc_one {
-     color: red;
+ .mc_two {
+     color: blue;
  }",
-   "output.js": "const one = \\"mc_one\\";
+   "output.js": "const two = \\"mc_two\\";
  var css = {
-     \\"one\\" : one
+     \\"two\\" : two
  };

  console.log(css);
  ",
  }
`;

exports[`/rollup.js watch mode should generate updated output for composes changes 1`] = `
Snapshot Diff:
- First value
+ Second value

@@ --- --- @@
  Object {
    "assets/watched.css": "/* packages/rollup/test/output/watch/change-composes/watched.css */
  .mc_one {
-     color: red;
+     color: green;
  }

  .mc_two {
      background: blue;
  }
@@ --- --- @@
  .mc_three {
      color: teal;
  }",
    "output.js": "const one = \\"mc_one\\";
  const two = one + \\" \\" + \\"mc_two\\";
- const three = \\"mc_three\\";
+ const three = one + \\" \\" + \\"mc_three\\";
  var css = {
      \\"one\\" : one,
  \\"two\\" : two,
  \\"three\\" : three
  };
`;

exports[`/rollup.js watch mode should update when a dependency changes 1`] = `
Snapshot Diff:
- First value
+ Second value

@@ --- --- @@
  Object {
    "assets/watch.css": "/* packages/rollup/test/output/watch/dep-graph/two.css */
  .mc_two {
-     color: blue;
+     color: green;
  }
  /* packages/rollup/test/output/watch/dep-graph/three.css */
  .mc_three {
      color: green;
  }
`;

exports[`/rollup.js watch mode should update when a shared @value changes 1`] = `
Snapshot Diff:
- First value
+ Second value

@@ --- --- @@
  Object {
    "assets/values.css": "/* packages/rollup/test/output/watch/shared-deps/values.css */",
    "assets/watch.css": "/* packages/rollup/test/output/watch/shared-deps/one.css */
  .mc_one {
-     color: blue;
+     color: red;
  }",
-   "output.js": "const baloo = \\"blue\\";
+   "output.js": "const baloo = \\"red\\";
  const one = \\"mc_one\\";
  var css = {
      \\"baloo\\" : baloo,
  \\"one\\" : one
  };
`;

exports[`/rollup.js watch mode should update when a shared dependency changes 1`] = `
Snapshot Diff:
- First value
+ Second value

@@ --- --- @@
  Object {
    "assets/watch.css": "/* packages/rollup/test/output/watch/shared-deps/two.css */
  .mc_two {
-     color: green;
+     color: yellow;
  }
  /* packages/rollup/test/output/watch/shared-deps/one.css */
  .mc_one {
      color: red;
  }
`;

exports[`/rollup.js watch mode should update when adding new css files 1`] = `
Snapshot Diff:
- First value
+ Second value

  Object {
-   "output.js": "console.log(\\"hello\\");
+   "assets/watch.css": "/* packages/rollup/test/output/watch/new-file/one.css */
+ .mc_one {
+     color: red;
+ }",
+   "output.js": "const one = \\"mc_one\\";
+ var css = {
+     \\"one\\" : one
+ };
+
+ console.log(css);
  ",
  }
`;

exports[`/rollup.js watch mode should watch when using code splitting 1`] = `
Snapshot Diff:
- First value
+ Second value

@@ --- --- @@
  Object {
    "assets/one.css": "/* packages/rollup/test/output/watch/code-splitting/shared.css */
  .mc_shared {
-     color: blue;
+     color: seafoam;
  }
  /* packages/rollup/test/output/watch/code-splitting/one.css */
  .mc_one {
      color: red;
  }",
`;
